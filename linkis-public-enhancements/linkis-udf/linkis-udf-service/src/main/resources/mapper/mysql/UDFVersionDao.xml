<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.apache.linkis.udf.dao.UDFVersionDao">
    <resultMap id="UDFVersionResultMap" type="org.apache.linkis.udf.entity.UDFVersion">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="udf_id" property="udfId" jdbcType="BIGINT"/>
        <result column="bml_resource_id" property="bmlResourceId" jdbcType="VARCHAR"/>
        <result column="bml_resource_version" property="bmlResourceVersion" jdbcType="VARCHAR"/>
        <result column="is_published" property="isPublished" jdbcType="TINYINT"/>
        <result column="register_format" property="registerFormat" jdbcType="VARCHAR"/>
        <result column="use_format" property="useFormat" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="udf_Version_List">
        `id`, `udf_id`, `path`, `bml_resource_id`, `bml_resource_version`, `is_published`,`register_format`,
        `use_format`, `description`, `create_time`,`md5`,`update_time`
    </sql>

    <insert id="addUdfVersion" useGeneratedKeys="true" keyProperty="id"
            parameterType="org.apache.linkis.udf.entity.UDFVersion">
        INSERT INTO linkis_ps_udf_version (
        <include refid="udf_Version_List"/>
        ) VALUES (
        #{id,jdbcType=BIGINT},#{udfId,jdbcType=BIGINT},#{path,jdbcType=VARCHAR},#{bmlResourceId,jdbcType=VARCHAR},
        #{bmlResourceVersion,jdbcType=VARCHAR},#{isPublished,jdbcType=TINYINT},#{registerFormat,jdbcType=VARCHAR},
        #{useFormat,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{md5,jdbcType=VARCHAR},now()
        )
    </insert>

    <select id="selectLatestByUdfId" resultType="org.apache.linkis.udf.entity.UDFVersion">
        SELECT
        <include refid="udf_Version_List"/>
        FROM linkis_ps_udf_version WHERE udf_id=#{udfId} AND bml_resource_version in
        (SELECT max(bml_resource_version) FROM linkis_ps_udf_version WHERE udf_id=#{udfId})
    </select>

    <select id="selectByUdfIdAndVersion" resultType="org.apache.linkis.udf.entity.UDFVersion">
        SELECT
        <include refid="udf_Version_List"/>
        FROM linkis_ps_udf_version WHERE udf_id=#{udfId} AND bml_resource_version=#{version}
    </select>

    <update id="updatePublishStatus">
        UPDATE linkis_ps_udf_version
        SET is_published = #{isPublished},update_time =now()
        WHERE udf_id = #{udfId}
        AND bml_resource_version = #{version}
    </update>

    <select id="getAllVersionByUdfId" resultType="org.apache.linkis.udf.vo.UDFVersionVo">
        SELECT puv.*, is_expire, create_user
        FROM linkis_ps_udf_baseinfo pu
        JOIN linkis_ps_udf_version puv
        ON pu.id = puv.udf_id
        AND pu.id = #{udfId}
        ORDER BY puv.bml_resource_version DESC
    </select>

    <select id="getAllVersions" resultType="org.apache.linkis.udf.entity.UDFVersion">
        SELECT puv.*
        FROM linkis_ps_udf_version puv
        WHERE puv.udf_id = #{udfId}
    </select>

    <delete id="deleteVersionByUdfId">
        DELETE FROM linkis_ps_udf_version
        WHERE udf_id = #{udfId}
    </delete>

    <select id="getSameJarCount" resultType="java.lang.Integer">
        select count(1) from linkis_ps_udf_baseinfo pu join linkis_ps_udf_version puv on
        pu.id=puv.udf_id where pu.create_user=#{userName} and pu.udf_type=0 and
        SUBSTRING_INDEX(puv.path,'/',-1)=#{jarName}
    </select>

    <select id="getOtherSameJarCount" resultType="java.lang.Integer">
        SELECT count(1)
        FROM linkis_ps_udf_baseinfo pu
        JOIN linkis_ps_udf_version puv ON pu.id = puv.udf_id
        WHERE pu.create_user = #{userName}
        AND pu.udf_type = 0
        AND pu.id != #{udfId}
        AND SUBSTRING_INDEX(puv.path, '/', -1) = #{jarName}
    </select>

    <update id="updateResourceIdByUdfId">
        UPDATE linkis_ps_udf_version
        SET bml_resource_id = #{resourceId}, path = replace(`path`, #{oldUser}, #{newUser}),update_time=now()
        WHERE udf_id = #{udfId}
    </update>

    <update id="updateUDFVersion" parameterType="org.apache.linkis.udf.entity.UDFVersion">
        UPDATE linkis_ps_udf_version
        SET path=#{path,jdbcType=VARCHAR},
        register_format=#{registerFormat,jdbcType=VARCHAR},
        use_format=#{useFormat,jdbcType=VARCHAR},
        description=#{description,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <select id="getUdfVersionInfoByName" resultType="org.apache.linkis.udf.vo.UDFVersionVo">
        SELECT puv.*, is_expire, create_user
        FROM linkis_ps_udf_baseinfo pu
        JOIN linkis_ps_udf_version puv
        ON pu.id = puv.udf_id
        AND pu.udf_name = #{udfName}
        AND pu.create_user = #{createUser}
        ORDER BY puv.bml_resource_version DESC
        LIMIT 1
    </select>
</mapper>